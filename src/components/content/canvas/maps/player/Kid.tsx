/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/CubeGuyCharacter.glb -o src/components/content/canvas/maps/player/Man.tsx 
*/

import {useGLTF} from '@react-three/drei'
import {Vector3} from "three";
import {usePlayer} from "./hooks/usePlayer.ts";

interface ModelProps{
  player: {
    id: string;
    selectedGLBIndex:number
  } | undefined;
  position: Vector3;
  modelIndex:number;
}
export function Kid({ player, position,modelIndex }: ModelProps) {
  const {playerRef, memoizedPosition, playerId, nodes, materials} = usePlayer(
      {
        player,
        position,
        modelIndex: modelIndex ?? player?.selectedGLBIndex
      }
  )
  return (
      <group ref={playerRef} position={memoizedPosition} name={playerId ?? ''} dispose={null}>
        <group name="Root_Scene">
          <group name="RootNode">
            <group name="CharacterArmature" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
              <primitive object={nodes.Root} />
            </group>
            <skinnedMesh
                name="Character"
                geometry={nodes.Character.geometry}
                material={materials.Atlas}
                skeleton={nodes.Character.skeleton}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={100}
                receiveShadow
                castShadow
            />
          </group>
        </group>
      </group>
  );
}


useGLTF.preload('/Steve.glb')
